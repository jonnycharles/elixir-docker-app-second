version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ../../:/app
      - /app/deps
      - /app/_build
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=elixir_docker_app_two_dev
      - POSTGRES_HOST=db
      - SECRET_KEY_BASE=your-secret-key-base
    command: >
      /bin/bash -c '
        if [ ! -f mix.exs ]; then
          yes | mix phx.new . --app elixir_docker_app_two --database postgres &&
          sed -i "s/hostname: \"localhost\"/hostname: System.get_env(\"POSTGRES_HOST\", \"db\")/g" config/dev.exs &&
          sed -i "s/ip: {127, 0, 0, 1}/ip: {0, 0, 0, 0}/g" config/dev.exs
        fi &&
        mix deps.get &&
        mix ecto.create &&
        mix ecto.migrate &&
        mix phx.server
      '

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=elixir_docker_app_two_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
